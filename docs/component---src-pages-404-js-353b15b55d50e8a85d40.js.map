{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.tsx","webpack:///./src/components/theme.ts","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","HeaderWrapper","styled","header","withConfig","displayName","componentId","theme","colors","primary","Header","react","style","margin","gatsby_browser_entry","to","color","textDecoration","siteTitle","background","contentBackground","link","text","accent","font","size","h1","h2","h3","h4","p","maxWidth","breakpoints","huge","large","medium","small","label","_len","arguments","length","args","Array","_key","css","apply","concat","splice","media","Layout","_ref","styled_components_browser_esm","site","siteMetadata","_755544856","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps"],"mappings":"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","file":"component---src-pages-404-js-353b15b55d50e8a85d40.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { Link } from \"gatsby\"\nimport styled from \"styled-components\";\nimport * as React from \"react\"\n\nconst HeaderWrapper = styled.header`\n    background: ${props => props.theme.colors.primary};\n    margin-bottom: 1.1rem;\n    > div {\n        margin: 0 auto;\n        maxWidth: 960;\n        padding: 1.15rem 1rem;\n    }\n`;\n\ninterface IHeaderProps {\n    siteTitle?: string;\n}\nconst Header = (props: IHeaderProps) => (\n    <HeaderWrapper>\n        <div\n            style={{\n            }}\n        >\n            <h1 style={{ margin: 0 }}>\n                <Link\n                    to=\"/\"\n                    style={{\n                        color: `white`,\n                        textDecoration: `none`,\n                    }}\n                >\n                    {props.siteTitle}\n                </Link>\n            </h1>\n        </div>\n    </HeaderWrapper>\n)\n\nexport default Header\n","import { css } from 'styled-components';\n\nexport const background = \"#f4f8fb\";\nexport const contentBackground = \"#fff\";\n\nexport const colors = {\n    link: \"#26a8ed\",\n    text: \"#3c484e\",\n    accent: \"#26a8ed\",\n    primary: \"#9e1732\",\n}\n\nexport const font = {\n    size: \"16px\",\n    h1: \"3em\",\n    h2: \"2em\",\n    h3: \"1.5em\",\n    h4: \"1.2em\",\n    p: \"1.2em\",\n}\n\nexport const maxWidth = 860;\n\nexport const breakpoints = {\n    huge: 1220,\n    large: 1024,\n    medium: 768,\n    small: 576,\n};\n\n\nconst query = (label: string) => (...args: any[]) => css`\n@media (min-width: ${breakpoints[label] / 16}em) {\n${css(args[0], ...args.splice(1))}\n}`;\n\nexport const media = {\n    huge: query('huge'),\n    large: query('large'),\n    medium: query('medium'),\n    small: query('small')\n};\n","import * as React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { ThemeProvider } from \"styled-components\";\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport * as theme from \"./theme\";\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n      render={data => (\n          <ThemeProvider theme={theme}>\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div>\n          <main>{children}</main>\n          <footer>\n          </footer>\n        </div>\n        </>\n      </ThemeProvider>\n    )}\n  />\n);\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}