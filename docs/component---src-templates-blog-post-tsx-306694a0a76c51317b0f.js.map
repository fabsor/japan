{"version":3,"sources":["webpack:///./src/components/base.tsx","webpack:///./src/templates/blog-post.tsx"],"names":["PostDate","styled","time","withConfig","displayName","componentId","props","theme","colors","accent","PostTitle","h1","ArticleHeader","header","media","medium","_templateObject","Main","main","maxWidth","contentBackground","_templateObject2","query","__webpack_exports__","post","data","markdownRemark","react","layout","frontmatter","date","title","gatsby_image_default","a","fluid","image","childImageSharp","dangerouslySetInnerHTML","__html","html"],"mappings":"kKAEaA,EAAWC,IAAOC,KAAVC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGJ,CAAH,+CAGR,SAACK,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,0SCE3C,IAAMC,EAAYT,IAAOU,GAAVR,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAGJ,CAAH,MAETW,EAAgBX,IAAOY,OAAVV,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAGJ,CAAH,uDAIb,SAACK,GAAD,OAAWA,EAAMC,MAAMO,MAAMC,OAA7BC,OAMAC,EAAOhB,IAAOiB,KAAVf,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAGJ,CAAH,8IACO,SAACK,GAAD,OAAWA,EAAMC,MAAMY,SAAW,IACjC,SAACb,GAAD,OAAWA,EAAMC,MAAMa,mBASnC,SAACd,GAAD,OAAWA,EAAMC,MAAMO,MAAMC,OAA7BM,OA6BOC,GAhBEC,EAAA,iBAACjB,GACZ,IAAMkB,EAAOlB,EAAMmB,KAAKC,eACxB,OACIC,EAAA,cAACC,EAAA,EAAD,KACID,EAAA,6BACIA,EAAA,cAACf,EAAD,KACAe,EAAA,cAAC3B,EAAD,KAAWwB,EAAKK,YAAYC,MAC5BH,EAAA,cAACjB,EAAD,KAAYc,EAAKK,YAAYE,QAE7BJ,EAAA,cAACK,EAAAC,EAAD,CAAKC,MAAOV,EAAKK,YAAYM,MAAMC,gBAAgBF,QACnDP,EAAA,cAACV,EAAD,CAAMoB,wBAAyB,CAAEC,OAAQd,EAAKe,WAM5C","file":"component---src-templates-blog-post-tsx-306694a0a76c51317b0f.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const PostDate = styled.time`\n    font-size: .8em;\n    font-weight: bold;\n    color: ${(props) => props.theme.colors.accent};\n`;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Img from \"gatsby-image\"\nimport { PostDate } from \"../components/base\";\nimport styled from \"styled-components\";\n\nconst PostTitle = styled.h1``;\n\nconst ArticleHeader = styled.header`\n    margin-top: 20px;\n    text-align: center;\n    padding: 1rem;\n    ${(props) => props.theme.media.medium`\n      padding: 0;\n      margin-top: 60px;\n   `}\n`;\n\nconst Main = styled.main`\n    max-width: ${(props) => props.theme.maxWidth + 96}px;\n    background: ${(props) => props.theme.contentBackground};\n    position: relative;\n    z-index: 2;\n    width: 100%;\n    padding: 1rem;\n    p:first-of-type {\n      font-size: 1.3em;\n      line-height: 1.3em;\n    }\n    ${(props) => props.theme.media.medium`\n      margin: 0 auto;\n      margin-top: -100px;\n      padding: 2rem 6rem;\n   `}\n`;\n        \ninterface IProps {\n    data: {\n        markdownRemark: any;\n    }\n}\n\nexport default (props: IProps) => {\n    const post = props.data.markdownRemark;\n    return (\n        <Layout>\n            <article>\n                <ArticleHeader>\n                <PostDate>{post.frontmatter.date}</PostDate>\n                <PostTitle>{post.frontmatter.title}</PostTitle>\n                </ArticleHeader>           \n                <Img fluid={post.frontmatter.image.childImageSharp.fluid} />\n                <Main dangerouslySetInnerHTML={{ __html: post.html }} />\n            </article>            \n        </Layout>\n    )\n};\n\nexport const query = graphql`\n    query($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            html\n            excerpt\n            frontmatter {\n                title\n                author\n                date\n                image {\n                    childImageSharp {\n                        fluid(maxHeight: 800) {\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}