{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_ref","data","title","description","allMarkdownRemark","totalCount","edges","map","_ref2","node","key","id","to","fields","slug","frontmatter","date","excerpt","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","paddingTop","Date","getFullYear","href","_755544856","SEO","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-tsx-de7b9a2b4d73eb79f1f2.js","sourcesContent":["import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default ({ data }) => (\n    <Layout>\n        <SEO title=\"Index\" description=\"This is a description\" />\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n            <div key={node.id}>\n                <h3><Link to={node.fields.slug}>\n                    {node.frontmatter.title}{\" \"} â€” {node.frontmatter.date}</Link>\n                </h3>\n                <p>{node.excerpt}</p>\n            </div>\n        ))}\n    </Layout>\n        )\n\nexport const query = graphql`\nquery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        totalCount\n        edges {\n            node {\n                id\n                frontmatter {\n                    title\n                    date(formatString: \"YYYY-mm-d hh:mm\")\n                }\n                fields {\n                    slug\n                }                \n                excerpt\n            }\n        }\n    }\n}\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            Â© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}